@model Recipe
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
<script type="text/javascript">$("#addItem").click(function () {
        $.ajax({
            url: this.href,
            cache: false,
            success: function (html) { $("#StepTable").append(html); }
        });
        return false;
    });</script>

<h1>Edit</h1>

@using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.RecipeID)

<div class="form-group">
    <b>@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })</b>
    <div class="col-md-10">
        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
    </div>
    <br />
    <b>@Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })</b>
    <div class="col-md-10">
        @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
    </div>
    <br />
    <b>@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })</b>
    <div class="col-md-10">
        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
    </div>
    <hr />
    <div class="col-md-10">
        <b>@Html.LabelFor(x => x.IngredientList, new { htmlAttributes = new { @class = "form-control" } })</b>
    </div>
    <table class="table">
        <tr>
            <th>Amount</th>
            <th>Units</th>
            <th>Ingredient</th>
            <th>Special Instructions</th>
            <th></th>
        </tr>

        @if (Model.IngredientList != null)
        {
            @foreach (var item in Model.IngredientList)
            {
    <tr>

        <td>
            @*<div class="col-md-10">*@
            @Html.EditorFor(i => item.Amount, new { htmlAttributes = new { @class = "control-label col-md-10" } })
            @Html.ValidationMessageFor(i => item.Amount, "", new { @class = "text-danger" })
        </td>
        <td>
            @Html.EditorFor(i => item.Unit, new { htmlAttributes = new { @class = "control-label col-md-10" } })
            @Html.ValidationMessageFor(i => item.Unit, "", new { @class = "text-danger" })
        </td>
        <td>
            @Html.EditorFor(i => item.Name, new { htmlAttributes = new { @class = "control-label col-md-10" } })
            @Html.ValidationMessageFor(i => item.Name, "", new { @class = "text-danger" })
        </td>
        <td>
            @Html.EditorFor(i => item.SpecialInstructions, new { htmlAttributes = new { @class = "control-label col-md-10" } })
            @Html.ValidationMessageFor(i => item.SpecialInstructions, "", new { @class = "text-danger" })
        </td>
        <td>
            @Html.ActionLink("Delete", "DeleteIngredient", new { IngredientID = item.ID, RecipeID = item.RecipeID })
        </td>
        @*</div>*@
    </tr>
            }
        }
    </table>
    @Html.ActionLink("Add Ingredient", "BlankIngredientRow", null, new { RecipeID = Model.RecipeID })



</div>

    <hr />
    <div class="col-md-10">
        <b>@Html.LabelFor(model => model.StepList, new { htmlAttributes = new { @class = "form-control" } })</b>
    </div>
    <div id="StepTable">

        <ul>
            @if (Model.StepList != null)
            {
                @foreach (var item in Model.StepList)
                {
                    @*<div class="col-md-10">*@
            <li>
                @Html.EditorFor(i => item.Instruction, new { htmlAttributes = new { @class = "control-label col-md-10" } })
                @Html.ValidationMessageFor(i => item.Instruction, "", new { @class = "text-danger" })
                @Html.ActionLink("Delete", "DeleteStep", new { stepID = item.ID, RecipeID = item.RecipeID })

            </li>
                    @*</div>*@
                }
            }
        </ul>
    </div>
    @Html.ActionLink("Add Step", "BlankStepRow", null, new { RecipeID = Model.RecipeID })


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save"  />
            <input type="button" value="Home" />
        </div>
    </div>
</div>
            }



