@model Recipe
@{
    ViewBag.Title = "Add";
}
<html>
<head>
    <title>Add</title>
</head>
<body>
    <h1>Add</h1>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <b>@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })</b>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <br/>
            <b>@Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-9" })</b>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <br />
            <b>@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })</b>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <hr />
            @*<div class="col-md-10">
            <b>@Html.LabelFor(x => x.IngredientList, new { htmlAttributes = new { @class = "form-control" } })</b>
        </div>*@
            @*<table class="table" id="tblIngredients">
            <thead>
                <tr>
                    <th>Amount</th>
                    <th>Units</th>
                    <th>Ingredient</th>
                    <th>Special Instructions</th>
                </tr>
            </thead>
            <tbody>

                @if (Model.IngredientList != null)
                {
                    @foreach (var item in Model.IngredientList)
                    {
                        <tr>
                            <td>
                                @Html.EditorFor(i => item.Amount, new { htmlAttributes = new { @class = "control-label col-md-2" } })
                                @Html.ValidationMessageFor(i => item.Amount, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.EditorFor(i => item.Unit, new { htmlAttributes = new { @class = "control-label col-md-2" } })
                                @Html.ValidationMessageFor(i => item.Unit, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.EditorFor(i => item.Name, new { htmlAttributes = new { @class = "control-label col-md-2" } })
                                @Html.ValidationMessageFor(i => item.Name, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.EditorFor(i => item.SpecialInstructions, new { htmlAttributes = new { @class = "control-label col-md-2" } })
                                @Html.ValidationMessageFor(i => item.SpecialInstructions, "", new { @class = "text-danger" })
                            </td>

                        </tr>
                    }
                }
            </tbody>
            <tfoot>
                <tr>
                    <td><input type="text" id="txtAmount" /></td>
                    <td><input type="text" id="txtUnit" /></td>
                    <td><input type="text" id="txtName" /></td>
                    <td><input type="text" id="txtSpecialInstructions" /></td>
                    <td><input type="button" id="btnAdd" value="Add" /></td>
                </tr>
            </tfoot>
        </table>
        <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
        <script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>
        <script type="text/javascript">
            window.alert("Before");
            $("*").on("click", "#btnAdd", function () {
                window.alert("something");
                confirm("Hello2");
                var txtAmount = $("#txtAmount");
                var txtUnit = $("#txtUnit");
                var txtName = $("#txtName");
                var txtSpecialInstructions = $("#txtSpecialInstructions");
                confirm("Hello");
                var tBody = $("#tblIngredients > TBODY")[0];

                var row = tBody.insertRow(-1);

                var cell = $(row.insertCell(-1));
                cell.html(txtAmount.val());

                cell = $(row.insertCell(-1));
                cell.html(txtUnit.val());

                var cell = $(row.insertCell(-1));
                cell.html(txtName.val());

                cell = $(row.insertCell(-1));
                cell.html(txtSpecialInstructions.val());

                cell = $(row.insertCell(-1));
                var btnRemove = $("<input />");
                btnRemove.attr("type", "button");
                btnRemove.attr("onclick", "Remove(this);");
                btnRemove.val("Remove");
                cell.append(btnRemove);

                txtAmount.val("");
                txtUnit.val("");
                txtName.val("");
                txtSpecialInstructions.val("");

            });

            function Remove(button) {

                var row = $(button).closest("TR");
                var name = $("TD", row).eq(0).html();
                if (confirm("Do you want to delete: " + name)) {
                    var table = $("#tblIngredients")[0];

                    table.deleteRow(row[0].rowIndex);
                }
            };
            $("body").on("click", "#btnSave", function () {
                //Loop through the Table rows and build a JSON array.
                var customers = new Array();
                $("#tblCustomers TBODY TR").each(function () {
                    var row = $(this);
                    var customer = {};
                    customer.Name = row.find("TD").eq(0).html();
                    customer.Country = row.find("TD").eq(1).html();
                    customers.push(customer);
                });

                //Send the JSON array to Controller using AJAX.
                $.ajax({
                    type: "POST",
                    url: "/Home/InsertCustomers",
                    data: JSON.stringify(customers),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (r) {
                        alert(r + " record(s) inserted.");
                    }
                });
            });</script>*@
            @*@Html.ActionLink("Add Ingredient", "BlankIngredientRowAdd", null, new { RecipeID = Model.RecipeID })*@



        </div>

            <hr />
            @*<div class="col-md-10">
                <b>@Html.LabelFor(model => model.StepList, new { htmlAttributes = new { @class = "form-control" } })</b>
            </div>
            @if (Model.StepList != null)
            {
                @foreach (var item in Model.StepList)
                {
                    <div class="col-md-10">
                        @Html.EditorFor(i => item.Instruction, new { htmlAttributes = new { @class = "control-label col-md-2" } })
                        @Html.ValidationMessageFor(i => item.Instruction, "", new { @class = "text-danger" })
                    </div>
                }
            }
            @Html.ActionLink("Add Ingredient", "BlankRowAdd", null, new { RecipeID = Model.RecipeID })*@



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</body>
</html>

