@model Recipe
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<h1>Details</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.RecipeID)

    <div class="form-group">
        <b>@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })</b>
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <br />
        <b>@Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })</b>
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <br />
        <b>@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })</b>
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <hr />
        <div class="col-md-10">
            <b>@Html.LabelFor(x => x.IngredientList, new { htmlAttributes = new { @class = "form-control" } })</b>
        </div>
        <table class="table">
            <tr>
                <th>Amount</th>
                <th>Units</th>
                <th>Ingredient</th>
                <th>Special Instructions</th>
            </tr>
            @if (Model.IngredientList != null)
            {
                @foreach (var item in Model.IngredientList)
                {
                    <tr>
                        <td>


                            @Html.DisplayFor(i => item.Amount, new { htmlAttributes = new { @class = "control-label col-md-10" } })
                            @Html.ValidationMessageFor(i => item.Amount, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.DisplayFor(i => item.Unit, new { htmlAttributes = new { @class = "control-label col-md-10" } })
                            @Html.ValidationMessageFor(i => item.Unit, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.DisplayFor(i => item.Name, new { htmlAttributes = new { @class = "control-label col-md-10" } })
                            @Html.ValidationMessageFor(i => item.Name, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.DisplayFor(i => item.SpecialInstructions, new { htmlAttributes = new { @class = "control-label col-md-10" } })
                            @Html.ValidationMessageFor(i => item.SpecialInstructions, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                }
            }
        </table>




    </div>
    <hr />
    <div class="col-md-10">
        <b>@Html.LabelFor(model => model.StepList, new { htmlAttributes = new { @class = "form-control" } })</b>
    </div>
    <ul>
        @if (Model.StepList != null)
        {
            @foreach (var item in Model.StepList)
            {
                <li>
                    @*<div class="col-md-10">*@
                    @Html.DisplayFor(i => item.Instruction, new { htmlAttributes = new { @class = "control-label col-md-10" } })
                    @Html.ValidationMessageFor(i => item.Instruction, "", new { @class = "text-danger" })
                </li>
                @*</div>*@
            }
        }
    </ul>

    @Html.ActionLink("Edit", "EditRecipe", new { id = Model.RecipeID })

    @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-default" />
            </div>
        </div>*@
</div>
}
